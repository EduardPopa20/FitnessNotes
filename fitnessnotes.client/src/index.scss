@use "./scss/utils/variables" as variables;

html {
  height: 100%;
  width: 100%;
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  width: 100%;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  place-items: center;
  min-width: 320px;
  min-height: 100%;
  height: 100%;
  margin: 0px;
}

#root {
  width: 100%;
  height: 100%;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

.custom-button {
  border: none !important;
  padding: 10px 20px !important;
  border-radius: 10px !important;
  text-transform: none !important;
  font-weight: 600 !important;
  color: #fff !important;
  background-color: map-get($map: variables.$colors, $key: secondaryColor) !important;
  transition: 0.4s !important;

  &:hover {
    background-color: map-get($map: variables.$colors, $key: mainColor) !important;
    color: map-get($map: variables.$colors, $key: white) !important;
  }

}

.custom-link {
  color: map-get(variables.$colors, $key: mainColorLighter);
  &:hover {
    color: map-get(variables.$colors, $key: mainColor);
  }

  &-invert {
    color: map-get(variables.$colors, $key: white);
    &:hover {
      color: map-get(variables.$colors, $key: mainColor);
    }
  }
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none !important; 
  margin: 0 !important; 
}

.app-container {
  display: grid !important;
  grid-template-rows: auto 1fr auto !important;
  height: 100vh !important;
}

.main-content {
  display: grid !important;
  grid-template-columns: min-content 1fr !important;
  height: calc(100vh - 64px) !important;
}

@media screen and (max-width: map-get(variables.$breakpoints, l)) {
  .main-content {
    display: block !important;
    height: fit-content !important;
    width: 100% !important;
    height: 100% !important;
  }
  .page-content {
    width: 100% !important;
    height: 100% !important;
  }
}

.page-content {
  box-sizing: border-box !important;
  padding: 20px !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

footer {
  padding: 20px !important;
  background-color: #f0f0f0 !important;
}

.MuiFormHelperText-root {
    color: map-get($map: variables.$colors, $key: red) !important;
    font-size: 14px !important;
    font-weight: 700 !important;
}

.input-error {
    color-scheme: light dark !important;
    font-synthesis: none !important;
    text-rendering: optimizeLegibility !important;
    -webkit-font-smoothing: antialiased !important;
    color: #FE1B1B !important;
    font-size: 14px !important;
    font-weight: 700 !important;
    font-family: Roboto,Arial,sans-serif !important;
    line-height: 1.66 !important;
    text-align: left !important;
}